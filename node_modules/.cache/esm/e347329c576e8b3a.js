let express,APP_PORT,DB,errorHandler,routes,mongoose,path;_576‍.w("express",[["default",["express"],function(v){express=v}]]);_576‍.w("./config",[["APP_PORT",["APP_PORT"],function(v){APP_PORT=v}],["DB",["DB"],function(v){DB=v}]]);_576‍.w("./middlewares/errorHandler",[["default",["errorHandler"],function(v){errorHandler=v}]]);_576‍.w("./routes/index",[["default",["routes"],function(v){routes=v}]]);_576‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_576‍.w("path",[["default",["path"],function(v){path=v}]]);





const app = express();

// for multipart data

app.use(express.urlencoded({extended: false}))
// for json data 

app.use(express.json())

app.use('/api',routes) // register routes in server.js first


/// mongodb connection 

mongoose.connect(DB, {useNewUrlParser:true , useUnifiedTopology:true })
const db = mongoose.connection;
db.on('error' , _576‍.g.console.error.bind(_576‍.g.console , 'connection error'))
db.once('open' , ()=>{
    console.log('connection successfull')
})

// define a global variable

global.appRoot = path.resolve(__dirname)



// middleware
app.use(errorHandler);


app.listen(APP_PORT ,  ()=> console.log("strat"))